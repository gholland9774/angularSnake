{"version":3,"sources":["webpack:///./src/app/grid-position.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game-cell/game-cell.component.ts","webpack:///./src/app/gamegrid/gamegrid.component.ts","webpack:///./src/app/gridsize-selector/gridsize-selector.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/gamegrid/gamegrid.component.css","webpack:///./src/app/gridsize-selector/gridsize-selector.component.css"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA0C;AAG1C;IAEE;IAAgB,CAAC;IAEjB,qDAAuB,GAAvB,UAAwB,QAAe;QACrC,6BAA6B;QAC7B,IAAI,IAAI,GAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAC,CAAC,CAAC,CAAC,CAAC;QACrE,2BAA2B;QAC3B,IAAI,KAAK,GAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,KAAK,GAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,kDAAoB,GAApB,UAAqB,gBAAsB,EAAE,SAAgB,EAAE,QAAe;QAC5E,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,KAAK,GAAG;gBACN,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3E,KAAK,CAAC;YACR,KAAK,GAAG;gBACN,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3E,KAAK,CAAC;YACR,KAAK,GAAG;gBACN,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3E,KAAK,CAAC;YACR,KAAK,GAAG;gBACN,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3E,KAAK,CAAC;QACV,CAAC;QAED,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,EAAC;YACxI,KAAK,CAAE,sBAAsB,CAAC,CAAC;QACjC,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC5C,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,CAAC,gBAAgB,CAAC;IAC1B,CAAC;IAvCH;QAAC,wFAAU,EAAE;;2BAAA;IAwCb,0BAAC;AAAD,CAAC;;;;;;;;AC1CD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACTG;AACL;AAGW;AA8B7D;IAAA;QACE,UAAK,GAAG,qBAAqB,CAAC;QAC9B,gBAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACnC,qBAAgB,GAAG,EAAE,CAAC;QACtB,cAAS,GAAU,IAAI,CAAC;QACxB,mBAAc,GAAW,KAAK,CAAC;QAC/B,kBAAa,GAAU,EAAE,CAAC;QAC1B,iBAAY,GAAa,EAAE,CAAC;QAC5B,wBAAmB,GAAwB,IAAI,mFAAmB,EAAE,CAAC;IAmDvE,CAAC;IA/CC,0CAAmB,GAAnB,UAAoB,KAAoB;QACtC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,KAAK,SAAS;gBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAC7F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,KAAK,CAAC;YACR,KAAK,WAAW;gBACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAC7F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,KAAK,CAAC;YACR,KAAK,WAAW;gBACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAC7F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,KAAK,CAAC;YACR,KAAK,YAAY;gBACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAC7F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAED,gCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,KAAK,GAAG,mDAAU,CAAC,KAAK,CAAC,CAAC,EAAC,GAAG,CAAG,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,WAAC;YAChC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAU,GAAV,UAAW,CAAC;QACV,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAChI,CAAC;IAtFH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,mjBAoBT;YACD,kCAAkC;YAClC,IAAI,EAAE;gBACJ,oBAAoB,EAAE,6BAA6B;aACpD;SACF,CAAC;;oBAAA;IA4DF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FwD;AACjB;AACI;AACF;AAEI;AAC6C;AAC1B;AACT;AACG;AAqB3D;IAAA;IAAyB,CAAC;IAnB1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,iHAAyB;gBACzB,uFAAiB;gBACf,gFAAQ;aACX;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE;gBACP,mFAAmB;aACtB;YACD,SAAS,EAAE;gBACP,oEAAY;aACf;SACF,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC9BsE;AA4BhG;IAAA;QACI,cAAS,GAAU,OAAO;IAoB9B,CAAC;IAjBG,8BAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,EAAE;QACvB,CAAC;IACL,CAAC;IAED,+BAAY,GAAZ;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,EAAC;YACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QAC7B,CAAC;IACL,CAAC;IAlBD;QAAC,mFAAK,EAAE;;iDAAA;IA5BZ;QAAC,uFAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,MAAM,EAAE,CAAC,ucAkBR,CAAC;YACF,QAAQ,EAAE,wEAGT;SACJ,CAAC;;gBAAA;IAsBF,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACjD+F;AAchG;IAEE;QAQA,cAAS,GAAU,EAAE,CAAC;IARN,CAAC;IAUjB,oCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,uCAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,QAAQ,GAAiB,OAAO,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAC/C,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,IAAI,OAAO,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,+CAAmB,GAAnB;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAC;YACnC,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAE,GAAG,GAAE,CAAC,GAAG,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gBAC1C,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;YACf,CAAC;YACD,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;IAChC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,WAAkB;QACjC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,yCAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAC,CAAC;gBAClC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;YACf,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAvDD;QAAC,mFAAK,EAAE;;uDAAA;IACR;QAAC,mFAAK,EAAE;;+DAAA;IACR;QAAC,mFAAK,EAAE;;2DAAA;IAjBV;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,+PAMT;YACD,kCAAuC;SACxC,CAAC;;yBAAA;IA6DF,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC1E6E;AAc9E;IAEE;QAKU,2BAAsB,GAAyB,IAAI,mEAAY,EAAU,CAAC;IALpE,CAAC;IASjB,4CAAQ,GAAR;IACA,CAAC;IAED,oDAAgB,GAAhB,UAAiB,KAAW;QAC1B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAE1D,CAAC;IAbD;QAAC,mFAAK,EAAE;;kEAAA;IAER;QAAC,mFAAK,EAAE;;uEAAA;IACR;QAAC,oFAAM,EAAE;;6EAAA;IAET;QAAC,mFAAK,EAAE;;sEAAA;IArBV;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,QAAQ,EAAE,qWAOT;YACD,kCAAgD;SACjD,CAAC;;iCAAA;IAoBF,gCAAC;;AAAD,CAAC;;;;;;;;;ACjCD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,oCAAoC,qBAAqB,GAAG,eAAe,uBAAuB,GAAG,iBAAiB,mBAAmB,2BAA2B,2BAA2B,oBAAoB,gCAAgC,iCAAiC,kCAAkC,+BAA+B,gCAAgC,sCAAsC,uBAAuB,8BAA8B,qBAAqB,yBAAyB,oBAAoB,GAAG,C;;;;;;;ACArhB,2BAA2B,mBAAmB,GAAG,cAAc,kBAAkB,mBAAmB,4BAA4B,8BAA8B,8BAA8B,GAAG,eAAe,uBAAuB,kCAAkC,kCAAkC,2BAA2B,gCAAgC,iCAAiC,kCAAkC,+BAA+B,gCAAgC,sCAAsC,GAAG,C;;;;;;;ACA/gB,iCAAiC,2BAA2B,2BAA2B,oBAAoB,gCAAgC,iCAAiC,kCAAkC,GAAG,oBAAoB,mBAAmB,wBAAwB,GAAG,C","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridPositionService {\n\n  constructor() { }\n\n  getInitialSnakePosition(gridSize:number): any[] {\n    //Head will be in the middle:\n    let head:number[] = [Math.floor(gridSize/2), Math.floor(gridSize/2)];\n    // Body will be to the left\n    let body1:number[] = [head[0], head[1]-1];\n    let body2:number[] = [head[0], head[1]-2];\n    return [head, body1, body2];\n  }\n\n  getNextSnakePosition(oldSnakePosition:any[], direction:string, gridSize:number): any[] {\n    let newSnakePosition = [];\n    switch (direction) {\n      case \"U\":\n        newSnakePosition[0] = [oldSnakePosition[0][0] - 1, oldSnakePosition[0][1]];\n        break;\n      case \"D\":\n        newSnakePosition[0] = [oldSnakePosition[0][0] + 1, oldSnakePosition[0][1]];\n        break;\n      case \"L\":\n        newSnakePosition[0] = [oldSnakePosition[0][0], oldSnakePosition[0][1] - 1];\n        break;\n      case \"R\":\n        newSnakePosition[0] = [oldSnakePosition[0][0], oldSnakePosition[0][1] + 1];\n        break;\n    }\n\n    if (newSnakePosition[0][0] < 0 || newSnakePosition[0][1] < 0 || newSnakePosition[0][0] >= gridSize || newSnakePosition[0][1] >= gridSize){\n      alert ('You a dead ass snake');\n    }\n\n    for (let i=1; i<oldSnakePosition.length; i++){\n      newSnakePosition[i] = oldSnakePosition[i-1];\n    }\n    return newSnakePosition;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/grid-position.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 403;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 403\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, HostListener } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { GridsizeSelectorComponent } from './gridsize-selector/gridsize-selector.component'\nimport { GamegridComponent } from './gamegrid/gamegrid.component'\nimport { GridPositionService } from './grid-position.service'\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>\n      {{title}}\n    </h1>\n    \n    <app-gridsize-selector\n        class=\"gridsizeSelector\"\n        [gridOptions]=\"gridOptions\"\n        [(selectedGridSize)]=\"selectedGridSize\"\n        [selectorEnabled]=\"gameInProgress\"\n    ></app-gridsize-selector>\n    \n    <app-gamegrid\n        class=\"gameGrid\"\n        [gridSize]=\"selectedGridSize\"\n        [newSnakePosition]=\"snakePosition\"\n        [foodPosition]=\"foodPosition\">\n    </app-gamegrid>\n    \n    <div id=\"startButton\">Press any arrow key to start the game</div>\n  `,\n  styleUrls: ['./app.component.css'],\n  host: {\n    '(document:keydown)': 'handleKeyboardEvent($event)'\n  }\n})\nexport class AppComponent {\n  title = 'Classic Snake Game!';\n  gridOptions = [10, 15, 20, 25, 30];\n  selectedGridSize = 10;\n  direction:string = null;\n  gameInProgress:boolean = false;\n  snakePosition: any[] = [];\n  foodPosition: number[] = [];\n  gridPositionService: GridPositionService = new GridPositionService();\n  gameTimer: Subscription\n\n\n  handleKeyboardEvent(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'ArrowUp':\n        if (!this.gameInProgress){\n          this.snakePosition = this.gridPositionService.getInitialSnakePosition(this.selectedGridSize);\n          this.gameInProgress = true;\n          this.startGame();\n        }\n        this.direction = \"U\";\n        break;\n      case 'ArrowDown':\n        if (!this.gameInProgress){\n          this.snakePosition = this.gridPositionService.getInitialSnakePosition(this.selectedGridSize);\n          this.gameInProgress = true;\n          this.startGame();\n        }\n        this.direction = \"D\";\n        break;\n      case 'ArrowLeft':\n        if (!this.gameInProgress){\n          this.snakePosition = this.gridPositionService.getInitialSnakePosition(this.selectedGridSize);\n          this.gameInProgress = true;\n          this.startGame();\n        }\n        this.direction = \"L\";\n        break;\n      case 'ArrowRight':\n        if (!this.gameInProgress){\n          this.snakePosition = this.gridPositionService.getInitialSnakePosition(this.selectedGridSize);\n          this.gameInProgress = true;\n          this.startGame();\n        }\n        this.direction = \"R\";\n        break;\n    }\n  }\n\n  startGame():void {\n    let timer = Observable.timer(0,250  );\n    this.gameTimer = timer.subscribe(t=>{\n      this.handleTick(t);\n    });\n  }\n\n  handleTick(t):void {\n    this.snakePosition = this.gridPositionService.getNextSnakePosition(this.snakePosition, this.direction, this.selectedGridSize);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { GridsizeSelectorComponent } from './gridsize-selector/gridsize-selector.component';\nimport { GamegridComponent } from './gamegrid/gamegrid.component';\nimport {GameCell} from \"./game-cell/game-cell.component\";\nimport {GridPositionService} from \"./grid-position.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridsizeSelectorComponent,\n    GamegridComponent,\n      GameCell\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n      GridPositionService\n  ],\n  bootstrap: [\n      AppComponent\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, Input, OnInit, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\n\n@Component({\n    selector: 'game-cell',\n    styles: [`\n        .gameCellUnit{\n            width: 100%;\n            height: 100%;\n            background-color: lightblue;\n            display: flex;\n            align-items: center;\n            justify-content: center;    \n        }\n        .blank {\n            background-color: lightblue;\n        }\n        .head {\n            background-color: darkgreen;\n        }\n        .body {\n            background-color: greenyellow;\n        }\n    `],\n    template: `\n      <div class=\"gameCellUnit {{gridStyle}}\">\n      </div>\n    `,\n})\nexport class GameCell implements OnChanges {\n    gridStyle:string = \"blank\"\n    @Input() cellContent:number;\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('cellContent' in changes) {\n            this.setGridStyle()\n        }\n    }\n\n    setGridStyle():void {\n        if (this.cellContent == 2){\n            this.gridStyle = \"head\";\n        }\n        else if (this.cellContent == 1) {\n            this.gridStyle = \"body\";\n        }\n        else {\n            this.gridStyle = \"blank\";\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game-cell/game-cell.component.ts","import { Component, OnInit, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\nimport { GameCell } from '../game-cell/game-cell.component'\n\n@Component({\n  selector: 'app-gamegrid',\n  template: `\n    <div *ngFor=\"let row of gameArray; let i = index\"class=\"gameRow\">\n      <div *ngFor=\"let col of row; let j = index;\" class=\"gameCell\">\n        <game-cell [cellContent]=\"col\" class=\"gameCell\"></game-cell>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./gamegrid.component.css']\n})\nexport class GamegridComponent implements OnChanges, OnInit {\n\n  constructor() { }\n\n  @Input() gridSize: number;\n  @Input() newSnakePosition: any[];\n  @Input() foodPosition: number[];\n\n  currentSnakePosition: any[];\n\n  gameArray: any[] = [];\n\n  ngOnInit() {\n    this.constructGrid();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('gridSize' in changes) {\n      let gridSize: SimpleChange = changes['gridSize'];\n      this.onGridSizeChange(gridSize.currentValue);\n    }\n    if ('newSnakePosition' in changes) {\n      this.updateSnakePosition();\n    }\n  }\n\n  updateSnakePosition():void {\n    this.resetGrid();\n    for (let i in this.newSnakePosition){\n      let coords = this.newSnakePosition[i];\n      this.gameArray[coords[0]][coords[1]] = i==\"0\"? 2 : 1;\n    }\n  }\n\n  resetGrid():void {\n    let newGameArray = [];\n    for (let i=0; i<this.gameArray.length; i++) {\n      let arr = [];\n      for (let j=0; j<this.gameArray.length; j++){\n        arr.push(\"0\")\n      }\n      newGameArray.push(arr);\n    }\n    this.gameArray = newGameArray;\n  }\n\n  onGridSizeChange(newGridSize:number) {\n    this.constructGrid();\n  }\n\n  constructGrid() {\n    this.gameArray = [];\n    for (let i=0; i<this.gridSize; i++) {\n      let arr = [];\n      for (let j=0; j<this.gridSize; j++){\n        arr.push(\"0\")\n      }\n      this.gameArray.push(arr);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gamegrid/gamegrid.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-gridsize-selector',\n  template: `\n    <div id=\"gridSelection\">\n      <div>Select your game grid size:</div>\n      <select id=\"gridSizeSelect\" (change)=\"onGridSizeChange($event)\" [(ngModel)]=\"selectedGridSize\" disabled=\"{{selectorEnabled}}\">\n        <option *ngFor=\"let numOption of gridOptions\" [value]=\"numOption\">{{numOption}}</option>\n      </select>\n    </div>\n  `,\n  styleUrls: ['./gridsize-selector.component.css']\n})\nexport class GridsizeSelectorComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() gridOptions: number[];\n\n  @Input() selectedGridSize: number;\n  @Output() selectedGridSizeChange: EventEmitter<number> = new EventEmitter<number>();\n\n  @Input() selectorEnabled:boolean;\n\n  ngOnInit() {\n  }\n\n  onGridSizeChange(event:Event):void {\n    this.selectedGridSizeChange.emit(this.selectedGridSize);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gridsize-selector/gridsize-selector.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \".gridsizeSelector{\\n    display: block;\\n}\\n\\n.gameGrid {\\n    margin-top: 40px;\\n}\\n\\n#startButton{\\n    width: 400px;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    margin-top: 40px;\\n    background-color: white;\\n    color: #999999;\\n    border-radius: 4px;\\n    padding: 20px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 673\n// module chunks = 1","module.exports = \".gameRow{\\n    height: 24px;\\n}\\n\\n.gameCell{\\n    width: 24px;\\n    height: 24px;\\n    display: inline-block;\\n    background-color: white;\\n    border: 1px solid black;\\n}\\n\\n.gameCell {\\n    color: darkgreen;\\n    display: -webkit-inline-box;\\n    display: -ms-inline-flexbox;\\n    display: inline-flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gamegrid/gamegrid.component.css\n// module id = 674\n// module chunks = 1","module.exports = \"#gridSelection{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n}\\n\\n#gridSizeSelect{\\n    width: 100px;\\n    margin-left: 20px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gridsize-selector/gridsize-selector.component.css\n// module id = 675\n// module chunks = 1"],"sourceRoot":""}